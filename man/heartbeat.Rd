% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/heartbeat.R
\name{heartbeat}
\alias{heartbeat}
\title{Create a heartbeat instance}
\usage{
heartbeat(
  key,
  period,
  expire = 3 * period,
  value = expire,
  config = NULL,
  start = TRUE,
  timeout = 10
)
}
\arguments{
\item{key}{Key to use}

\item{period}{Timeout period (in seconds)}

\item{expire}{Key expiry time (in seconds)}

\item{value}{Value to store in the key.  By default it stores the
expiry time, so the time since last heartbeat can be computed.}

\item{config}{Configuration parameters passed through to
\code{redux::redis_config}.  Provide as either a named list or a
\code{redis_config} object.  This allows host, port, password,
db, etc all to be set.  Socket connections (i.e., using
\code{path} to access Redis over a socket) are not currently
supported.}

\item{start}{Should the heartbeat be started immediately?}

\item{timeout}{Time, in seconds, to wait for the heartbeat to
appear.  It should generally appear very quickly (within a
second unless your connection is very slow) so this can be
generally left alone.}
}
\description{
Create a heartbeat instance.  This can be used by running
\code{obj$start()} which will reset the TTL (Time To Live) on \code{key} every
\code{period} seconds (don't set this too high).  If the R process
dies, then the key will expire after \code{3 * period} seconds (or
set \code{expire}) and another application can tell that this R
instance has died.
}
\details{
The heartbeat object has three methods:
\itemize{
\item \code{is_running()} which returns \code{TRUE} or
\code{FALSE} if the heartbeat is/is not running.
\item \code{start()} which starts a heartbeat
\item \code{stop()} which requests a stop for the heartbeat
}
}
\examples{

if (redux::redis_available()) {
  rand_str <- function() {
    paste(sample(letters, 20, TRUE), collapse = "")
  }
  key <- sprintf("heartbeatr:test:\%s", rand_str())
  h <- heartbeatr::heartbeat(key, 1, expire = 2)
  con <- redux::hiredis()

  # The heartbeat key exists
  con$EXISTS(key)

  # And has an expiry of less than 2000ms
  con$PTTL(key)

  # We can manually stop the heartbeat, and 2s later the key will
  # stop existing
  h$stop()

  # Sys.sleep(2)
  # con$EXISTS(key) # 0
}
}
